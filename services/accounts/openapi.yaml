openapi: 3.0.3
info:
  title: KuroBank Accounts Service API
  description: CRUD REST APIs in KuroBank to CREATE, UPDATE, FETCH AND DELETE account details
  version: 1.0.0
  contact:
    name: Kuro Bytes
    email: support@kurobytes.com

paths:
  /api/create:
    post:
      operationId: createAccount
      summary: Create Account REST API
      description: REST API to create new Customer & Account inside KuroBank
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '201':
          description: HTTP Status CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDto'
        '500':
          description: HTTP Status Internal Server Error

  /api/fetch:
    get:
      operationId: fetchAccount
      summary: Fetch Account Details REST API
      description: REST API to fetch Customer & Account details based on a mobile number
      parameters:
        - name: kurobank-correlation-id
          in: header
          required: false
          schema:
            type: string
        - name: mobileNumber
          in: query
          required: true
          schema:
            type: string
            pattern: '^[0-9]{10}$'
      responses:
        '200':
          description: HTTP Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDto'
        '500':
          description: HTTP Status Internal Server Error

  /api/update:
    put:
      operationId: updateAccount
      summary: Update Account Details REST API
      description: REST API to update Customer & Account details based on an account number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDto'
      responses:
        '200':
          description: HTTP Status OK
        '417':
          description: Expectation Failed
        '500':
          description: HTTP Status Internal Server Error

  /api/delete:
    delete:
      operationId: deleteAccount
      summary: Delete Account & Customer Details REST API
      description: REST API to delete Customer & Account details based on a mobile number
      parameters:
        - name: mobileNumber
          in: query
          required: true
          schema:
            type: string
            pattern: '^[0-9]{10}$'
      responses:
        '200':
          description: HTTP Status OK
        '417':
          description: Expectation Failed
        '500':
          description: HTTP Status Internal Server Error

  /api/customer-details:
    get:
      operationId: fetchCustomerDetails
      summary: Fetch Customer Details REST API
      description: REST API to fetch Customer details along with Account, Cards and Loans details
      parameters:
        - name: kurobank-correlation-id
          in: header
          required: false
          schema:
            type: string
        - name: mobileNumber
          in: query
          required: true
          schema:
            type: string
            pattern: '^[0-9]{10}$'
      responses:
        '200':
          description: HTTP Status OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailsDto'
        '500':
          description: HTTP Status Internal Server Error

  /api/build-info:
    get:
      operationId: getBuildInfo
      summary: Get Build information
      responses:
        '200':
          description: HTTP Status OK

  /api/contact-info:
    get:
      operationId: getContactInfo
      summary: Get Contact Info
      responses:
        '200':
          description: HTTP Status OK

  /actuator/health:
    get:
      operationId: healthCheck
      summary: Health Check
      responses:
        '200':
          description: Service is healthy

components:
  schemas:
    CustomerDto:
      type: object
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 30
        email:
          type: string
          format: email
        mobileNumber:
          type: string
          pattern: '^[0-9]{10}$'
      required:
        - name
        - email
        - mobileNumber

    AccountsDto:
      type: object
      properties:
        customerId:
          type: integer
        accountNumber:
          type: integer
        accountType:
          type: string
        branchAddress:
          type: string
        communicationSw:
          type: boolean

    CustomerDetailsDto:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        accountsDto:
          $ref: '#/components/schemas/AccountsDto'
        cardsDto:
          $ref: '#/components/schemas/CardsDto'
        loansDto:
          $ref: '#/components/schemas/LoansDto'

    CardsDto:
      type: object
      properties:
        mobileNumber:
          type: string
        cardNumber:
          type: string
        cardType:
          type: string
        totalLimit:
          type: integer
        amountUsed:
          type: integer
        availableAmount:
          type: integer

    LoansDto:
      type: object
      properties:
        mobileNumber:
          type: string
        loanNumber:
          type: string
        loanType:
          type: string
        totalLoan:
          type: integer
        amountPaid:
          type: integer
        outstandingAmount:
          type: integer

    ResponseDto:
      type: object
      properties:
        statusCode:
          type: string
        statusMsg:
          type: string

    ErrorResponseDto:
      type: object
      properties:
        apiPath:
          type: string
        errorCode:
          type: string
        errorMessage:
          type: string
        errorTime:
          type: string
